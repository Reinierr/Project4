<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAAEsCAYAAACG+vy+AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC45bDN+TgAACLpJREFUeF7t3L2r
        ZVcZwOHLzKRJKss0QkTGkKC9jYW2tjb+CQa/tRAEm4CFVRoLwSKICBYWFiKCYKFIQBBSyDRBIgHJNErQ
        +rqWZ3a8M+677z5nr+/1FA8D594hzDA/1nvDy3t1fX0N3GL1Q+Bk9UPgZPVD4GT1Q+Bk9UPgZPVD4GT1
        Q+Bk9UPgZPVD4GT1Q+Bk9UPgZPVD4GT1Q+Dk6uH3rt4IXlj7IswuBnIdfHztizA7gcCGJZCfrn0RZrcE
        8u/AzyHwjCUQYxasuBnIj9a+AWZ2M5DHgTELbrgZSGTMghueDeQHa98Es3o2kPcCYxY88WwgkTELnlgL
        5PW1b4QZrQXyKDBmQbAWSGTMgkAgsOG2QP4UGLOY3m2BRF4RpicQ2LAVyJtrvwFmshXIPwM/hzC1rUAi
        YxZTuyuQN9Z+E8zirkDeD4xZTOuuQCJjFtPaE8j3134jzGBPIH8NjFlMaU8gkTGLKQkENuwN5O3AmMV0
        9gYSeUWYjkBgwzmBOHDNdM4JxIFrpnNOIJExi6mcG4gD10zl3EAcuGYq5wYSGbOYxiWBOHDNNC4JxIFr
        pnFJIJExiylcGogD10zh0kAcuGYKlwYSGbMYnkBgw5FAHLhmeEcCibwiDE0gsOFoIA5cM7SjgThwzdCO
        BhIZsxhWikAcuGZYKQL5e2DMYkgpAomMWQwpVSAOXDOkVIG8ExizGE6qQCJjFsMRCGxIGYgD1wwnZSCR
        V4ShCAQ2pA7EgWuGkjoQB64ZSupAImMWw8gRiAPXDCNHIA5cM4wcgUTGLIaQKxAHrhlCrkAcuGYIuQKJ
        jFl0L2cgDlzTvZyBOHBN93IGEhmz6JpAYEPuQN4KjFl0K3cgkVeEbgkENpQI5Mdr/2HoQYlAHLimWyUC
        iYxZdKlUIA5c06VSgThwTZdKBRIZs+hOyUAcuKY7JQNx4JrulAwkMmbRFYHAhtKBOHBNV0oHEnlF6IZA
        YEONQBy4phs1AnHgmm7UCCQyZtGFWoE4cE0XagXiwDVdqBVIZMyieTUDceCa5tUMxIFrmlczkMiYRdNq
        B+LANU2rHYgD1zStdiCRMYtmCQQ2tBCIA9c0q4VAIq8ITRIIbGglEAeuaVIrgThwTZNaCSQyZtGclgJx
        4JrmtBSIA9c0p6VAImMWTWktEAeuaUprgThwTVNaCyQyZtEMgcCGFgNx4JpmtBhI5BWhCQKBDa0G4sA1
        TWg1EAeuaUKrgUTGLKprORAHrqmu5UAcuKa6lgOJjFlU1XogDlxTVeuBOHBNVa0HEhmzqKaHQBy4ppoe
        AnHgmmp6CCQyZlGFQGBDL4E4cE0VvQQSeUUoTiCwoadAHLimuJ4CceCa4noKJDJmUVRvgThwTVG9BeLA
        NUX1FkhkzKKYHgNx4JpiegzEgWuK6TGQyJhFEQKBDb0G4sA1RfQaSOQVITuBwIaeA3Hgmux6DsSBa7Lr
        OZDImEVWvQfiwDVZ9R6IA9dk1XsgkTGLbEYIxIFrshkhkHcDYxZZjBBIZMwii6vnP/3F6xc+84Xrj772
        4to/vF44cE0WV1cvffc6eu5TX+o5EgeuyeLDQKIHr36l59fEmEVyTwWy6PQ1EQjJrQYSPXj1y729Jg5c
        k9ytgSw6e028IiR1ZyDRg0++1kskAiGpXYFE9x5+u4eRy4FrktodyOK5tl8TB65J6uxAonuf+GbLr4kx
        i2QuCmTR6GviwDXJHAokuvfyN1p7TRy4JpnDgSwa+9/BxiySSBZIdP/lr7fymjhwTRJJA1k08Jo4cE0S
        WQKJ7r/y1dqviTGLw7IFsqj4mgiEw7IHElVao3fgmsOKBLKo8Jp4RTikaCBR4TV6gXBI8UAWhV6TN9f+
        0LBXtUCiAqsqDlxzSNVAogJr9MYsLlY9kEXG1+SHa39w2KOZQKJMa/QOXHOxpgJZZPgB3pjFRZoMJEq8
        Ru/ANRdpNpBFotfEgWsu0nwg0f1XvpbiNTFmcbYuAlkcfE0cuOZsXQUSHVh8dOCas3UXyOLC18SYxVm6
        DSS6YPFRIJyl60AWZ7wmDlxzliECieL94J2viVeE3YYJZLHjNREIuw0XSHTH4qMD1+w2ZCDRvYffum3k
        cuCa3YYNZHHLa2LMYpfhA4lWFh8duGaXKQJZ3PgB3oFrdpkqkGi5H/yRz3/2c2t/IXDTdIEswmvyt/Dr
        82t/KbCYNpD/+th3fh1+FQm3mjuQk3eDlwKh8H8E8j+/CETCUwTytEeB14QPCWTdzwORIJANfw68JpMT
        yN1+FohkUgLZ563AazIhgZznJ4FIJiKQ8/0+EMkkBHKZDwIj1wQEcsxvA5EMTCDHPQ68JoMSSDq/CUQy
        GIGkZfFxMALJ45eBSAYgkHzeCbwmnRNIfhYfOyaQMv4SeE06JJCyLD52RiDlWaPviEDqsfjYAYHUFdfo
        RdIwgdQXFx9fD4TSIIG043eBSBojkLb8I/ADfEME0iaLj40QSLveD7wmlQmkfRYfKxJIH6zRVyKQvrgf
        XJhA+mONviCB9MsafQEC6dvbgdckI4GMwRp9JgIZh/vBGQhkPNboExLImNwPTkQg47JGn4BAxud+8AEC
        mYM1+gsJZC7W6M8kkPm8F3hNdhLIvKzR7yCQuVl8vINAiKzR30IgLNwPXiEQnmWN/gaBsMb94CcEwpbp
        Fx8Fwl2mvh8sEPb4VzDl4qNAOMd0a/QC4VxTLT4KhEtNsUYvEI4Y/n6wQEjhV8GQkQiEVIa8HywQUhtq
        8VEg5DDMGr1AyKn7xUeBkFvXa/QCoZQu7wcLhJK6W6MXCDV0s0YvEGr5Y9B8JAKhpubvBwuEFjS7+CgQ
        WtHkGr1AaE1T94MFQouaWaMXCC2rfj9YILSu6hq9QOhFlTV6gdCTR0HR10Qg9KjYGr1A6FWRxUeB0Lus
        a/QCYQTxfnCW10QgjCT5Gr1AGE3S+8ECYURxjT7JyCUQRnZ4jV4gjO5xcPFrIhBmcdEavUCYyR/WIrjd
        9dV/AATx+3vfCEhrAAAAAElFTkSuQmCC
</value>
  </data>
</root>